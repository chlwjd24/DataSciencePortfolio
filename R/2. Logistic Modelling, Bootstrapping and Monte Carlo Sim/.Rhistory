B = sapply(1:m, function(i) sample(x, replace = TRUE))
bootmle = sapply(B, mle)
bootmom = apply(B, 2, mean)
bootmom <- c()
for (i in 1:m)
{
obs <- sample(1:n, replace=TRUE)
bootmom[i] <- mean(x[obs]) # Mean of the bootstrap sample
}
library(moments)
n=300
set.seed(12345678)
y=rt(n, df = 1)
# Generated sample X_i
x = y + 5
mn = mean(x)
md = median(x) # The middle observation
mn
## [1] 7.509423
md
m = 1000
B = sapply(1:m, function(i) sample(x, replace = TRUE))
bootMeans = apply(B, 2, mean)
bootMeds = apply(B, 2, median)
bootmom <- c()
for (i in 1:m)
{
obs <- sample(1:n, replace=TRUE)
bootmom[i] <- mean(x[obs]) # Mean of the bootstrap sample
}
bootmle <- c()
for (i in 1:m)
{
obs <- sample(1:n, replace=TRUE)
bootmle[i] <- min(mean(x[obs],0.5)) # Mean of the bootstrap sample
}
m=1000
bootmom <- c()
for (i in 1:m)
{
obs <- sample(1:n, replace=TRUE)
bootmom[i] <- mean(x[obs]) # Mean of the bootstrap sample
}
bootmle <- c()
for (i in 1:m)
{
obs <- sample(1:n, replace=TRUE)
bootmle[i] <- min(mean(x[obs],0.5)) # Mean of the bootstrap sample
}
m=1000
bootmom <- c()
for (i in 1:m)
{
obs <- sample(1:n, replace=TRUE)
bootmom[i] <- mean(x[obs]) # Mean of the bootstrap sample
}
bootmle <- c()
for (i in 1:m)
{
obs <- sample(1:n, replace=TRUE)
bootmle[i] <- min(mean(x[obs],0.5)) # Mean of the bootstrap sample
}
m=1000
bootmom <- c()
for (i in 1:m)
{
obs <- sample(1:n, replace=TRUE)
bootmom[i] <- mean(x[obs]) # Mean of the bootstrap sample
}
bootmle <- c()
for (i in 1:m)
{
obs <- sample(1:n, replace=TRUE)
bootmle[i] <- min(mean(x[obs],0.5)) # Mean of the bootstrap sample
}
library(boot)
library(simcausal)
library(moments)
n=500
set.seed(42)
x=rbern(n, 0.45)
m=1000
bootmom <- c()
for (i in 1:m)
{
obs <- sample(1:n, replace=TRUE)
bootmom[i] <- mean(x[obs]) # Mean of the bootstrap sample
}
bootmle <- c()
for (i in 1:m)
{
obs <- sample(1:n, replace=TRUE)
bootmle[i] <- min(mean(x[obs],0.5)) # Mean of the bootstrap sample
}
unique(bootmle)
m=1000
bootmom <- c()
for (i in 1:m)
{
obs <- sample(1:n, replace=TRUE)
bootmom[i] <- mean(x[obs]) # Mean of the bootstrap sample
}
bootmle <- c()
for (i in 1:m)
{
obs <- sample(1:n, replace=TRUE)
bootmle[i] <- pmin(mean(x[obs],0.5)) # Mean of the bootstrap sample
}
}
unique(bootmle)
m=1000
bootmom <- c()
for (i in 1:m)
{
obs <- sample(1:n, replace=TRUE)
bootmom[i] <- mean(x[obs]) # Mean of the bootstrap sample
}
bootmle <- c()
for (i in 1:m)
{
obs <- sample(1:n, replace=TRUE)
bootmle[i] <- min(c(mean(x[obs],0.5))) # Mean of the bootstrap sample
}
min(c(mean(x[1],0.5)))
min(c(mean(x[2],0.5)))
min(c(mean(x[3],0.5)))
min(mean(x[3],0.5))
min(mean(x[2],0.5))
help(min)
c(mean(x[3],0.5))
min(c(mean(x[obs],"0.5")))
min(c(mean(x[obs],'0.5')))
min(c(mean(x[1],"0.5")))
min(c(mean(x[1],0.5)))
min(c(mean(x[1]),0.5))
min(c(mean(x[2]),0.5))
min(c(mean(x[3]),0.5))
min(mean(x[3]),0.5)
min(mean(x[2]),0.5)
min(mean(x[1]),0.5)
m=1000
bootmom <- c()
for (i in 1:m)
{
obs <- sample(1:n, replace=TRUE)
bootmom[i] <- mean(x[obs]) # Mean of the bootstrap sample
}
bootmle <- c()
for (i in 1:m)
{
obs <- sample(1:n, replace=TRUE)
bootmle[i] <- min(mean(x[obs]),0.5) # Mean of the bootstrap sample
}
sd.mle =  sd(bootmle)
sd.mom = sd(bootmom)
sd.mle
sd.mom
biased.mle=mean(bootmle)-mle(x)
biased.mom=mean(bootmom)-mean(x)
biased.mle
biased.mom
library(boot)
library(simcausal)
library(moments)
n=500
set.seed(42)
x=rbern(n, 0.45)
m=1000
bootmom <- c()
for (i in 1:m)
{
obs <- sample(1:n, replace=TRUE)
bootmom[i] <- mean(x[obs]) # Mean of the bootstrap sample
}
bootmle <- c()
for (i in 1:m)
{
obs <- sample(1:n, replace=TRUE)
bootmle[i] <- min(mean(x[obs]),0.5) # Mean of the bootstrap sample
}
sd.mle =  sd(bootmle)
sd.mom = sd(bootmom)
sd.mle
sd.mom
biased.mle=mean(bootmle)-mle(x)
biased.mle=mean(bootmle)-mean(x)
biased.mom=mean(bootmom)-mean(x)
biased.mle
biased.mom
sd.mom
sd.mle =  sd(bootmle)
sd.mom = sd(bootmom)
sd.mle
biased.mle=mean(bootmle)-min(mean(x),0.5)
biased.mom=mean(bootmom)-mean(x)
biased.mle
biased.mom
library(boot)
alpha=0.05
boot.ci(bootmle, type = "perc")
library(boot)
alpha=0.05
b <- boot(x, mean, m)
library(boot)
alpha=0.05
b <- boot(x, mean(), m)
library(boot)
alpha=0.05
b <- boot(x, mean(x), m)
library(boot)
alpha=0.05
b <- boot(x, mean, m)
library(boot)
alpha=0.05
b <- boot(x, mean, R = m)
library(boot)
alpha=0.05
mle <- function(data, idx){
bootmle <- c()
for (i in 1:m)
{
obs <- sample(1:n, replace=TRUE)
bootmle[i] <- min(mean(x[obs]),0.5)
}
}
b <- boot(x, mle, R = m)
boot.ci(bootmle, type = "perc")
library(boot)
alpha=0.05
mle <- function(data, idx){
bootmle <- c()
for (i in 1:m)
{
obs <- sample(1:n, replace=TRUE)
bootmle[i] <- min(mean(x[obs]),0.5)
}
}
b <- boot(x, mle, R = m)
boot.ci(b, type = "perc")
library(boot)
alpha=0.05
mle <- function(data){
bootmle <- c()
for (i in 1:m)
{
obs <- sample(1:n, replace=TRUE)
bootmle[i] <- min(mean(x[obs]),0.5)
}
}
b <- boot(x, mle, R = m)
library(boot)
alpha=0.05
mle <- function(data){
bootmle <- c()
for (i in 1:m)
{
obs <- sample(1:n, replace=TRUE)
bootmle[i] <- min(mean(x[obs]),0.5)
}
}
b <- boot(x, mle, R = m)
library(boot)
alpha=0.05
mle <- function(data, idx){
bootmle <- c()
for (i in 1:m)
{
obs <- sample(1:n, replace=TRUE)
bootmle[i] <- min(mean(x[obs]),0.5)
}
}
b <- boot(x, mle, R = m)
boot.ci(b, type = "perc")
library(boot)
alpha=0.05
mle <- function(data, idx){
bootmle <- c()
obs <- sample(1:n, replace=TRUE)
bootmle[i] <- min(mean(x[obs]),0.5)
bootmle
}
b <- boot(x, mle, R = m)
boot.ci(b, type = "perc")
library(boot)
alpha=0.05
mle <- function(data, idx){
bootmle <- c()
bootmle[i] <- min(mean(x[obs]),0.5)
bootmle
}
b <- boot(x, mle, R = m)
boot.ci(b, type = "perc")
mle <- function(x){
min(mean(x),0.5)
}
vhat.mle=array(dim=m)
vhat.mom=array(dim=m)
ite=200
for(i in 1:m) {
B1 = sapply(1:ite, function(i) sample(B[,i], replace = TRUE))
bootMeans = apply(B, 2, mean)
bootMeds = apply(B, 2, median)
vhat.mean[i]=var(bootMeans)
vhat.median[i]=var(bootMeds)
}
mle <- function(x){
min(mean(x),0.5)
}
vhat.mle=array(dim=m)
vhat.mom=array(dim=m)
ite=200
for(i in 1:m) {
B1 = sapply(1:ite, function(i) sample(B[,i], replace = TRUE))
bootmle = apply(B, 2, mle)
bootmom = apply(B, 2, mean)
vhat.mean[i]=var(bootMeans)
vhat.median[i]=var(bootMeds)
}
mle <- function(x){
min(mean(x),0.5)
}
vhat.mle=array(dim=m)
vhat.mom=array(dim=m)
ite=200
for(i in 1:m) {
B1 = sapply(1:ite, function(i) sample(B[,i], replace = TRUE))
bootmle = apply(B, 2, mle)
bootmom = apply(B, 2, mean)
vhat.mle[i]=var(bootmle)
vhat.mom[i]=var(bootmom)
}
library(boot)
library(simcausal)
library(moments)
n=500
set.seed(42)
x=rbern(n, 0.45)
m=1000
bootmom <- c()
for (i in 1:m)
{
obs <- sample(1:n, replace=TRUE)
bootmom[i] <- mean(x[obs])
}
bootmle <- c()
for (i in 1:m)
{
obs <- sample(1:n, replace=TRUE)
bootmle[i] <- min(mean(x[obs]),0.5)
}
B = sapply(1:m, function(i) sample(x, replace = TRUE))
bootmle = apply(B, 2, mle)
B = sapply(1:m, function(i) sample(x, replace = TRUE))
bootmle = apply(B, 2, mle)
bootmom = apply(B, 2, mom)
B = sapply(1:m, function(i) sample(x, replace = TRUE))
bootmle = apply(B, 2, mle)
bootmom = apply(B, 2, mean)
mle <- function(x, idx){
min(mean(x),0.5)
}
vhat.mle=array(dim=m)
vhat.mom=array(dim=m)
ite=200
for(i in 1:m) {
B1 = sapply(1:ite, function(i) sample(B[,i], replace = TRUE))
bootmle = apply(B, 2, mle)
bootmom = apply(B, 2, mean)
vhat.mle[i]=var(bootmle)
vhat.mom[i]=var(bootmom)
}
mle <- function(x, idx){
min(mean(x),0.5)
}
B = sapply(1:m, function(i) sample(x, replace = TRUE))
bootmle = apply(B, 2, mle)
bootmom = apply(B, 2, mean)
mle <- function(x, idx){
min(mean(x[idx]),0.5)
}
B = sapply(1:m, function(i) sample(x, replace = TRUE))
bootmle = apply(B, 2, mle)
bootmom = apply(B, 2, mean)
mle <- function(x, idx){
min(mean(x[idx]),0.5)
}
B = sapply(1:m, function(i) sample(x, replace = TRUE))
bootmle = apply(B, 2, mle)
bootmom = apply(B, 2, mean)
m=1000
bootmom <- c()
for (i in 1:m)
{
obs <- sample(1:n, replace=TRUE)
bootmom[i] <- mean(x[obs])
}
bootmle <- c()
for (i in 1:m)
{
obs <- sample(1:n, replace=TRUE)
bootmle[i] <- min(mean(x[obs]),0.5)
}
sd.mle =  sd(bootmle)
sd.mom = sd(bootmom)
sd.mle
sd.mom
biased.mle=mean(bootmle)-min(mean(x),0.5)
biased.mom=mean(bootmom)-mean(x)
biased.mle
biased.mom
library(boot)
library(simcausal)
library(moments)
n=500
set.seed(42)
x=rbern(n, 0.45)
m=1000
bootmom <- c()
for (i in 1:m)
{
obs <- sample(1:n, replace=TRUE)
bootmom[i] <- mean(x[obs])
}
bootmle <- c()
for (i in 1:m)
{
obs <- sample(1:n, replace=TRUE)
bootmle[i] <- min(mean(x[obs]),0.5)
}
sd.mle =  sd(bootmle)
sd.mom = sd(bootmom)
sd.mle
sd.mle =  sd(bootmle)
sd.mom = sd(bootmom)
sd.mle
sd.mom
biased.mle=mean(bootmle)-min(mean(x),0.5)
biased.mom=mean(bootmom)-mean(x)
biased.mle
biased.mom
library(boot)
data<- x
boot.mli <- boot(data, mean, R=1000)
library(boot)
data<- x
boot.mli <- boot(data, mean, R=1000)
data = read.csv("remiss.csv")
View(data)
data = read.csv("remiss.csv")
boxplot(data$time~data$group)
data = read.csv("remiss.csv")
boxplot(data, names=c("Treatment","Control"))
data = read.csv("remiss.csv")
boxplot(data$time~data$group, names=c("Treatment","Control"))
data = read.csv("remiss.csv")
boxplot(data$time~data$group, names=c("Treatment","Control"),xlab = "Group", ylab="Time")
qqnorm(data$group == 0)
qqnorm(data$group)
qqnorm(data$time)
qqnorm(data$time)
qqline(data$time)
qqnorm(data$time)
qqline(data$time,  col = "red")
help(qqnorm)
qqnorm(data$time,col=as.factor(df$group), main = "Normal Probability Plot for Treatment Group")
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
data %>%
ggplot(aes(sample = time)) +
geom_qq() + geom_qq_line() +
facet_wrap(~group, scales = "free_y")
obs <- mean(data$time[data$group==0])-mean(data$time[data$group==1])
n <- 1000
sim <- numeric(n)
for(i in 1:n){
shuffled <- sample(data$group)
sim[i] <- mean(data$time[shuffled==0])-mean(data$time[shuffled==1])
}
alpha <- 0.05
lower_crit <- quantile(sim, alpha/2)
upper_crit <- quantile(sim, 1 - alpha/2)
p_value <- mean(abs(sim) >= abs(obs))
lower_crit
upper_crit
p_value
library(boot)
data<- x
boot.ci(boot.out = boot.mean, conf = 0.05, type = c("perc"))
library(boot)
data<- x
boot.ci(boot.out = mle, conf = 0.05, type = c("perc"))
library(boot)
data<- x
boot.ci(boot.out = b, conf = 0.05, type = c("perc"))
library(dplyr)
library(ggplot2)
data %>%
ggplot(aes(sample = time)) +
geom_qq() + geom_qq_line() +
facet_wrap(~group, scales = "free_y")
install.packages("dplyr")
install.packages("dplyr")
data = read.csv("remiss.csv")
boxplot(data$time~data$group, names=c("Treatment","Control"),xlab = "Group", ylab="Time")
library(dplyr)
library(ggplot2)
data %>%
ggplot(aes(sample = time)) +
geom_qq() + geom_qq_line() +
facet_wrap(~group, scales = "free_y")
tinytex::install_tinytex()
